/** 
 * @author ZYROUGE, Snowflake107
 * @license GPL-3.0
*/

const Utils = {
    emojis: require("../../../Utils/Emojis")
}; // require("aurora") will return an empty object due to NodeJS file system

module.exports = {
    PREFIX_CHANGE:          (PREFIX) => `Prefix has been changed to \`${PREFIX}\``,
    HELP_DESC:              (PREFIX, COMMANDS, RANDOMCATNUMBER, RANDOMCATNAME) => (
                                `Use \`${PREFIX}help <number>\` for Commands in the **Category**\n` +
                                `For Example, \`${PREFIX}help ${RANDOMCATNUMBER}\` for Commands in **${RANDOMCATNAME.toProperCase()}**\n` +
                                `Total Commands: **${COMMANDS}**`
                            ),
    HELP_MENU:              "Help Menu",
    HELP_CATEGORIES:        "Categories",
    HELP_SUPPORT:           "Support",
    DASHBOARD:              "Dashboard",
    WEBSITE:                "Website",
    TRANSLATION_ERROR:      "Something went wrong in the translation system.",
    GUILD_LANGUAGE:         "Language of this server is English.",
    COMMAND_DISABLED:       (COMMAND) => (`\`${COMMAND}\` Command is **Disabled** in this Server.`),
    MODULE_DISABLED:        (MODULE) => (`\`${MODULE}\` Module is **Disabled** in this Server.`),
    COOLDOWN_WAIT:          (TIMELEFT, COMMAND) => (`Please wait **${TIMELEFT.toFixed(1)} second${TIMELEFT > 1 ? "s" : ""}** before reusing the \`${COMMAND}\` command.`),
    COMMAND_GUILDONLY:      (COMMAND) => (`\`${COMMAND}\` Command can be used only in **Guilds!**`),
    COMMAND_NSFWONLY:       (COMMAND) => (`\`${COMMAND}\` Command can be used only in **NSFW Channels!**`),
    MISSING_PERMISSION_BOT: (PERMISSION) => (`${Utils.emojis.cross} I am missing ${PERMISSION.map(perm => `\`${perm}\``).join(", ")} permission${PERMISSION.length > 1 ? "s" : ""}!`),
    MISSING_PERMISSION_USER:(PERMISSION) => (`${Utils.emojis.cross} You are missing ${PERMISSION.map(perm => `\`${perm}\``).join(", ")} permission${PERMISSION.length > 1 ? "s" : ""}!`),
    SOMETHING_WRONG:        (ERROR) => (`${Utils.emojis.cross} Something went wrong!${ERROR ? `**${ERROR}**` : ""}`),
    USER_AFK:               (USERNAME, DISCRIM, AFKMSG) => (`**${USERNAME}#${DISCRIM}** is Currently AFK. Reason: **${AFKMSG}**`),
    AFK:                    "AFK",
    AFK_LOG_MSG:            (USER, TIME) => (`${USER} on ${TIME}`),
    CONTENT:                (MESSAGE) => (`**Content:** ${MESSAGE}`),
    AFK_REMOVED:            (PINGS) => (`${Utils.emojis.tick} Removed Your AFK. ${PINGS ? `You were pinged **${PINGS}** times.\nLogs:` : ""}`),
    COULDNT_FETCH_IMAGE:    "Couldn\'t fetch an Image.",
    BAKA_MSG:               (USER, TARGET) => (`${USER} says **${TARGET}** Baka!`),
    CUDDLE_MSG:             (USER, TARGET) => (`${USER} cuddles **${TARGET}**!`),
    FEED_MSG:               (USER, TARGET) => (`${USER} feeds **${TARGET}**!`),
    HUG_MSG:                (USER, TARGET) => (`${USER} hugs **${TARGET}**`),
    KISS_MSG:               (USER, TARGET) => (`${USER} kisses **${TARGET}**`),
    PAT_MSG:                (USER, TARGET) => (`${USER} pats **${TARGET}**`),
    POKE_MSG:               (USER, TARGET) => (`${USER} pokes **${TARGET}**`),
    SMUG_MSG:               (USER) => `${USER} smugs!`,
    TICKLE_MSG:             (USER, TARGET) => (`${USER} tickles **${TARGET}**`),
    WINK_MSG:               (USER) => `${USER} winks!`,
    POCKET:                 "Pocket",
    CASH:                   "Cash",
    SAFE:                   "Safe",
    GOLD:                   "Gold",
    BALANCE:                "Balance",
    COULDNT_MAKE_PAYMENT:   `${Utils.emojis.cross} Couldn\'t Make that Purchase.`,
    PURCHASE_SUCCESS:       `${Utils.emojis.tick} Purchase Success!`,
    BILL:                   "Bill",
    ITEM_NAME:              "Item Name",
    ITEM_COST:              "Item Cost",
    PURCHASED_COUNT:        "Purchased Count",
    TOTAL_CHECKOUT:         "Total Checkout",
    PURCHASE_EXCEED:        (ITEM) => (`${Utils.emojis.cross} You cannot buy that many **${ITEM}**.`),
    NO_MONEY_BUY_COUNT:     (COUNT, ITEM) => (`${Utils.emojis.cross} You don\'t have enough cash to buy **${COUNT > 1 ? `${COUNT} ${ITEM}s` : `${ITEM}`}**.`),
    PROVIDE_ITEM_NAME:      `${Utils.emojis.cross} Provide a Item **Name or ID** to buy from the Shop.`,
    INVALID_ITEM_NAME:      (ITEM) => (`${Utils.emojis.cross} Item \`${ITEM}\` doesn\'t exist in the Shop.`),
    EMPTY_INVENTORY:        `${Utils.emojis.cross} Your Inventory is Empty!`,
    COUNT:                  "Count",
    RESALE_COST:            "Resale Cost",
    INVENTORY:              "Inventory",
    PAGE:                   "Page",
    DONT_OWN_ITEM:          (ITEM) => (`${Utils.emojis.cross} You don\'t own \`${ITEM}\`!`),
    NO_RESELL:              (ITEM) => (`${Utils.emojis.cross} You can\'t resell \`${ITEM}\`!`),
    ONLY_HAVE_ITEM:         (COUNT, ITEM) => (`${Utils.emojis.cross} You only have **${COUNT}** of \`${ITEM}\`!`),
    SOLD:                   "Sold",
    ITEM_RESALE_COST:       "Item Resale Cost",
    SOLD_COUNT:             "Sold Count",
    PURCHASE_FAILED:        `${Utils.emojis.cross} Failed to make Purchase.`,
    AVAILABLE:              "Available",
    LIMITED:                "Limited",
    MAX_PURCHASE_LIMIT:     "Maximum Purchase Limit",
    INC_SUCCESS_RATE:       "Increase in Success Rate",
    INC_BOUNTY_RATE:        "Increase in Bounty Rate",
    CANNOT_RESELL:          "Cannot be reselled",
    NONE:                   "None",
    SHOP:                   "Shop",
    ALREADY_INGAME:         (GAME) => (`${Utils.emojis.cross} You are already in a game.${GAME ? ` (${GAME})` : ""}`),
    USER_ALREADY_INGAME:    (USER, GAME) => (`${Utils.emojis.cross} ${USER} is already in a game.${GAME ? ` (${GAME})` : ""}`),
    SLOWDOWN_MSG:           (USER, TIME, COMMAND) => (`${Utils.emojis.cross} Slowdown **${USER}**! Come back after **${TIME}** to ${COMMAND} again.`),
    FOUGHT_RECENTLY:        (USER, TIME) => (`${Utils.emojis.cross} Slowdown! **${USER}** has fought recently. He can fight after **${TIME}**.`),
    NO_CASH_TO_BET:         (USER, AMOUNT) => (`${Utils.emojis.cross} **${USER}** doesn\'t have **${AMOUNT}** ${Utils.emojis.cash} to bet.`),
    FIGHT:                  "Fight",
    FIGHT_WAITING_REPLY:    (USER, OPTIONS) => (`${Utils.emojis.spinner} Waiting for **${USER}** to Accept.\nType any of these ${OPTIONS.map(x => `\`${x}\``).join(", ")} to proceed.\nYou have 20 seconds to do this.`),
    NO_RESPONSE:            (USER, SMTH) => (`${Utils.emojis.cross} No response was recieved from **${USER}**. ${SMTH.toProperCase()} Cancelled.`),
    DECLINED_MSG:           (USER) => (`${Utils.emojis.cross} **${USER}** has declined. Match Cancelled.`),
    FINDING_NEARBY_ENEMIES: `${Utils.emojis.spinner} Finding the Nearby Enemies...`,
    NO_NEARBY_ENEMIES:      `${Utils.emojis.cross} No Enemies were found nearby!`,
    NO_CASH_TO_ROB:         (AMOUNT) => (`${Utils.emojis.cross} You need atleast **${AMOUNT}** ${Utils.emojis.cash} to Rob!`),
    HIGH_BOUNTY_TO_SMTH:    (SMTH, BOUNTY) => (`${Utils.emojis.cross} You can\'t **${SMTH.toProperCase()}** when your Bounty is above **${BOUNTY}**`),
    INVALID_RESPONSE:       (USER, SMTH) => (`${Utils.emojis.cross} Invalid Response was received from **${USER}**. ${SMTH.toProperCase()} was **Cancelled**!`),
    ONLY_NSFW_HELP:         (COMMAND) => (`${Utils.emojis.cross} \`${COMMAND}\` can be viewed only in an NSFW Channel`),
    REQUIRED:               "Required",
    OPTIONAL:               "Optional",
    CLICK_HERE:             "Click Here",
    NO_RESULT_FOUND:        "No Results were Found",
    NO_PARAMETER_PROVIDED:  (PARAM) => (`${Utils.emojis.cross} No **${PARAM}** was provided`),
    INVALID_PARAMETER:      (PARAM) => (`${Utils.emojis.cross} Invalid **${PARAM}** was provided`),
    NO_SMTH_FOUND_WITH:     (SMTH, WITH) => (`${Utils.emojis.cross} No **${SMTH}** was found with \`${WITH}\``),
    PROVIDE_SMTH_TO:        (SMTH, TO) => (`${Utils.emojis.cross} Provide ${SMTH} to ${TO}`),
    SUCCESS_SMTH:           (SMTH, TO) => (`${Utils.emojis.tick} Successfully ${SMTH} to ${TO}`),
    SUCCESS_SMTH_TASK:      (SMTH, TASK) => (`${Utils.emojis.tick} ${SMTH} was ${TASK} successfully`),
    COULDNT_TASK:           (TASK, ERROR) => (`${Utils.emojis.cross} Couldn\'t ${TASK}.${ERROR ? ` **${ERROR}**` : ""}`),
    NO_SMTH_FOUND_FOR:      (SMTH, FOR) => (`${Utils.emojis.cross} No **${SMTH}** were found for **${FOR}**`),
    NO_SMTH_FOUND:          (SMTH) => (`${Utils.emojis.cross} No **${SMTH}** was found`),
    MEMBERS_JOINED:         "Members Joined",
    MEMBERS_LEFT:           "Members Left",

    /* Months */
    MONTHS:                 ["January", "Feburary", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],

    /* Numbers */
    "1": "1", "2": "2", "3": "3", "4": "4", "5": "5", "6": "6", "7": "7", "8": "8", "9": "9", "0": "0"
};